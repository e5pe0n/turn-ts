services:
  peer:
    container_name: peer
    build:
      context: .
      dockerfile: Dockerfile.turn
      target: e2e
    networks:
      public_net:
        ipv4_address: 192.168.20.30
    volumes:
      - ./e2e/turn-ts:/app
      - node_modules:/app/node_modules
    # TODO: wait for server and router to be ready stably
    # command: bash -c "/app/client.sh && sleep 3 && pnpm test:docker"
    command: pnpm dev:peer

  server:
    container_name: server
    build:
      context: .
      dockerfile: Dockerfile.turn
      target: e2e
    networks:
      public_net:
        ipv4_address: 192.168.20.20
    volumes:
      - ./e2e/turn-ts:/app
      - node_modules:/app/node_modules
    # command: pnpm dev:server
    command: tail -f /dev/null

  router:
    container_name: router
    build:
      context: .
      dockerfile: Dockerfile.turn
      target: base
    privileged: true
    cap_add:
      - NET_ADMIN
      - NET_RAW
    networks:
      private_net:
        ipv4_address: 192.168.10.20
      public_net:
        ipv4_address: 192.168.20.10
    volumes:
      - ./scripts/router.sh:/router.sh
    command: bash -c "./router.sh && tail -f /dev/null"

  client:
    container_name: client
    build:
      context: .
      dockerfile: Dockerfile.turn
      target: e2e
    privileged: true
    cap_add:
      - NET_ADMIN
    networks:
      private_net:
        ipv4_address: 192.168.10.10
    volumes:
      - ./e2e/turn-ts:/app
      - node_modules:/app/node_modules
    # TODO: wait for server and router to be ready stably
    # command: bash -c "/app/client.sh && sleep 3 && pnpm test:docker"
    command: bash -c "tail -f /dev/null"
    depends_on:
      - server
      - router

volumes:
  node_modules:

networks:
  private_net:
    driver: bridge
    ipam:
      config:
        - subnet: 192.168.10.0/24
  public_net:
    driver: bridge
    ipam:
      config:
        - subnet: 192.168.20.0/24

